*********************************************************************
*
* Display intro
*
display_intro:
       .proc
display_intro_1:
       bl   @clear_for_intro
*      ZQX-ONE
       li   r0,7*32+12
       li   r1,txt_zqx_one
       bl   @display_text_at
*      Press fire to start
       li   r0,9*32+6
       li   r1,txt_press_fire_to_start
       bl   @display_text_at
*      Versiom
       li   r0,29*32+19
       li   r1,txt_version
       bl   @display_text_at
*      High score
       bl   @display_high_scores
       li   r0,240
       bl   @wait
       bl   @clear_tl2
       mov  @frames_to_wait,r0
       jne  display_intro_3
*      Initial demo run
       bl   @init_level
       bl   @init_sub_level
       li   r0,128
       bl   @intro_loop
       mov  r0,r0
       jne  display_intro_2
*      Title
       bl   @display_title
       li   r0,180
       bl   @wait
       bl   @clear_tl2_center
       mov  @frames_to_wait,r0
       jne  display_intro_3
*      Continue demo flight
       li   r0,512
       bl   @intro_loop
       mov  r0,r0
       jeq  display_intro_1
display_intro_2:
       bl   @clear_tl2
display_intro_3:
       .endproc
*// display_intro

*********************************************************************
*
* Clear for intro
*
clear_for_intro:
       .proc
       bl   @clear_name_table_and_patterns
       bl   @reset_sprites
       bl   @clear_tl2
       bl   @init_tl2_patterns
       .endproc
*// clear_for_intro

*********************************************************************
*
* Run intro loop
*
* r0: Run until the screen has scrolled to this position
*
intro_loop:
       .proc
       mov  r0,@scroll_max
intro_loop_1:
       bl   @vsync
       bl   @set_vdp_regs
       bl   @gpu_run
       bl   @upload_characters
       bl   @draw_column
       bl   @wait_gpu
       bl   @player_collisions
       bl   @bullet_collisions
       bl   @intro_move_player
       bl   @fire
       bl   @move_sprites
       bl   @create_sprites
       bl   @upload_sprites
       bl   @display_height
       bl   @display_fuel
       bl   @snd_player
       bl   @scroll
       abs  @player_died
       jne  intro_loop_2
       li   r0,KEY_FI
       bl   @check_key
       jne  intro_loop_2
       c    @scroll_pos,@scroll_max
       jl   intro_loop_1
       clr  r0
       jmp  intro_loop_3
intro_loop_2:
       seto r0
intro_loop_3:
       .endproc
*// intro_loop

*********************************************************************
*
* Intro move player
*
intro_fire_speed:
       equ  30
*
intro_move_player:
*      Fire
       dec  @intro_fire_countdown
       jne  intro_move_player_1
       seto @player_fire               ; Fire
       li   r0,intro_fire_speed
       mov  r0,@intro_fire_countdown
intro_move_player_1:
       rt
intro_fire_countdown:
       data intro_fire_speed
*// intro_move_player

*********************************************************************
*
* Display title
*
display_title:
       .proc
       li   r3,title
       mov  r3,@title_ptr
display_title_1:
       li   r0,2
       bl   @wait
       mov  r0,r0
       jne  display_title_2
       mov  @title_ptr,r3
       movb *r3+,r0                    ; x
       jlt  display_title_2
       srl  r0,8
       movb *r3+,r1
       srl  r1,8
       sla  r1,5
       a    r1,r0
       ai   r0,name_table_2
       movb *r3+,r1
       bl   @vsbw
       mov  r3,@title_ptr
       jmp  display_title_1
display_title_2:
       .endproc
title_ptr:
       data 0
*// display_title

*********************************************************************
*
* Display high scores
*
display_high_scores:
       .proc
*      High scores text
       li   r0,14*32+10
       li   r1,txt_high_scores
       bl   @display_text_at
*      6 high scores
       li   r0,char_zero
       mov  r0,@current_char_zero
       li   r4,1
       li   r5,high_score_positions
       li   r6,high_scores
display_high_scores_1:
       mov  *r5+,r0
       ai   r0,name_table_2
       mov  r4,r1
       ai   r1,char_zero_high
       swpb r1
       bl   @vsbw
       li   r1,char_space*256
       movb r1,*r15
       mov  *r6+,r1
       li   r2,5
       bl   @display_decimal
       ai   r1,char_zero
       movb r1,*r15
       swpb r1
       inc  r4
       ci   r4,6
       jle  display_high_scores_1
*      Best high score at top of screen
       li   r0,char_zero_high
       mov  r0,@current_char_zero
       mov  @high_scores,@high_score
       bl   @display_high_score
       .endproc
high_score_positions:
       data 16*32+5
       data 18*32+5
       data 20*32+5
       data 16*32+19
       data 18*32+19
       data 20*32+19
*// display_high_scores
